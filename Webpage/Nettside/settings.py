"""
Django settings for Nettside project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path

import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-!mbxih#ma(_y8d-)$wi6-a)kwd(n%k$m6q5d$50ndy37cf&zv='


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

"""
Allow any local client to conect to the server
Whitelist all the IP adreses
Let anyone send and receive data from the server
"""
ALLOWED_HOSTS = ["*"]


# Application definition
"""
All the apps that are used for backend are defined here
VMB_GUSTAV was creadet as an app and has to be defined in order to use it properly
"""
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "VMB_GUSTAV",
    "channels",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'Nettside.urls'


"""
Tell Django where to find templates
Templates directories that are used to format the webpages have to be defined in TEMPLATES dictionary in order to function properly
Use BASE_DIR to get the base directory that runs everything from within
"""
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "VMB_GUSTAV/templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

"""
Wsgi conection is taken from wsgi file in the main folder
It gets the varaible "application" from the file
The variable stores information of what kind of conection it has gotten

WSGI conection is short lived and only provides one chanel to comunicate POST/GET
After server or client is done with POST/GET WSGI conection is closed
"""
WSGI_APPLICATION = 'Nettside.wsgi.application'
"""
Asgi conection is taken from asgi file in the main folder
It gets the varaible "application" from the file
The variable stores information of what kind of conection it has gotten

ASGI conection is long lived and provides multiple chanels to comunicate with clinet and server
The only way to close the conection is if either client or server disconects from channel like exiting the site
"""
ASGI_APPLICATION = 'Nettside.asgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/


STATIC_URL = '/static/'

"""
Tell Django where to find static files
Static files are used to change properties of a website
"""
STATICFILES_DIRS = [
    BASE_DIR / "VMB_GUSTAV/static/"
]



# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
